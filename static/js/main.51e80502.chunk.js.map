{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","year","title","summary","poster","genres","className","src","alt","map","genre","index","slice","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","id","medium_cover_image","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mRAsCeA,MAhCf,YAA0D,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OAC7C,OACE,sBAAKC,UAAU,QAAf,UACE,qBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,sBAAKI,UAAU,cAAf,UACE,oBAAIA,UAAU,eAAd,SAA8BJ,IAG9B,oBAAII,UAAU,cAAd,SAA6BL,IAC7B,oBAAIK,UAAU,gBAAd,SAEGD,EAAOI,KAAI,SAACC,EAAOC,GAAR,OACV,oBAAgBL,UAAU,iBAA1B,SACGI,GADMC,QAKb,oBAAGL,UAAU,iBAAb,UAA+BH,EAAQS,MAAM,EAAG,KAAhD,gBCoCOC,G,kNApDbC,MAAQ,CACNC,WAAW,EACXC,OAAQ,I,EAIVC,U,sBAAY,8BAAAC,EAAA,sEAEmCC,IAAMC,IAAI,4DAF7C,gBAEcJ,EAFd,EAEFK,KAAQA,KAAQL,OACxB,EAAKM,SAAS,CAAEN,OAAQA,EAAQD,WAAW,IAHjC,2C,kEAcVQ,KAAKN,c,+BAGG,IAAD,EACuBM,KAAKT,MAA3BC,EADD,EACCA,UAAWC,EADZ,EACYA,OACnB,OACE,yBAASV,UAAU,YAAnB,SACGS,EACC,qBAAKT,UAAU,SAAf,SACE,sBAAMA,UAAU,eAAhB,0BAGA,qBAAKA,UAAU,SAAf,SACGU,EAAOP,KAAI,SAAAe,GAAK,OACf,cAAC,EAAD,CAEEC,GAAID,EAAMC,GACVxB,KAAMuB,EAAMvB,KACZC,MAAOsB,EAAMtB,MACbC,QAASqB,EAAMrB,QACfC,OAAQoB,EAAME,mBACdrB,OAAQmB,EAAMnB,QANTmB,EAAMC,e,GApCXE,IAAMC,YCFxBC,IAASC,OAOP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAGFC,SAASC,eAAe,W","file":"static/js/main.51e80502.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// 아래와 같이 style로 해도되고 css를 import 할 수도 있다.\r\nimport \"./Movie.css\"\r\n\r\n\r\nfunction Movie({ year, title, summary, poster, genres }) {\r\n  return (\r\n    <div className=\"movie\">\r\n      <img src={poster} alt={title} title={title} />\r\n      <div className=\"movie__data\">\r\n        <h3 className=\"movie__title\">{title}</h3>\r\n        {/* 아래와 같이 style 태그를 넣는 것도 가능하다. */}\r\n        {/* <h3 className=\"movie__title\" style={{ backgroundColor: \"red\" }}>{title}</h3> */}\r\n        <h5 className=\"movie__year\">{year}</h5>\r\n        <ul className=\"movie__genres\">\r\n          {/* map 함수는 item 뿐만아니라 index도 같이 준다. */}\r\n          {genres.map((genre, index) =>\r\n            <li key={index} className=\"genres__genres\">\r\n              {genre}\r\n            </li>\r\n          )}\r\n        </ul>\r\n        <p className=\"movie__summary\">{summary.slice(0, 180)}...</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nMovie.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  year: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  summary: PropTypes.string.isRequired,\r\n  poster: PropTypes.string.isRequired,\r\n  genres: PropTypes.arrayOf(PropTypes.string).isRequired\r\n};\r\n\r\nexport default Movie;\r\n","import React from \"react\";\nimport axios from \"axios\";\nimport Movie from \"./Movie\"\nimport \"./App.css\"\n\n\nclass App extends React.Component {\n  state = {\n    isLoading: true,\n    movies: [] // 여기에 가득 채울 예정이다.\n  };\n\n  // getMovies는 비동기임을 말하고, 함수 내부에선 내가 뭘 기다리길 원하냐? 물어봄\n  getMovies = async () => {\n    // 뭘 기다릴 건지 await로 알려준다.\n    const { data: { data: { movies } } } = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\n    this.setState({ movies: movies, isLoading: false });\n  }\n\n  // ComponentDidMount에서 data를 fetch할 예정이다.\n  componentDidMount() {\n    // setTimeout(() => {\n    //   // setState를 사용할 때 state 안에 default 값들을 선언할 필요는 없다.\n    //   this.setState({ isLoading: false });\n    // }, 6000);\n\n    // axios get은 느리니 동기화를 해야한다.\n    this.getMovies();\n  }\n\n  render() {\n    const { isLoading, movies } = this.state;\n    return (\n      <section className=\"container\">\n        {isLoading ? (\n          <div className=\"loader\">\n            <span className=\"loader__text\">Loading...</span>\n          </div>\n        ) : (\n            <div className=\"movies\">\n              {movies.map(movie => (\n                <Movie\n                  key={movie.id}\n                  id={movie.id}\n                  year={movie.year}\n                  title={movie.title}\n                  summary={movie.summary}\n                  poster={movie.medium_cover_image}\n                  genres={movie.genres}\n                />\n              ))}\n            </div>\n          )\n        }\n      </section>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  // 밑에 있는 <App />을 컴포넌트라 하는데 HTML을 반환하는 함수다.\n  // 그냥 App으로 작성하면 안됨\n  // HTML + JS를 JSX라 부른다. => React의 특화된 개념\n\n  // <App /><Potato /> 이렇게 하면 안된다.\n  // react 앱은 하나의 component만을 rendering 해야하기 때문임\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  // index.html의 <div id='root'></div>에 집어넣는 역할을 한다.\n  document.getElementById('root')\n);\n"],"sourceRoot":""}